= render "inspect/shared/inspect_subnav"

.header Check if present demand matches demand_expected_value.

- @nodes = @gql.present_graph.nodes.map(&:query).sort_by{|c| c.excel_id || 0}
- sad_nodes = @nodes.select{|c| c.demand_expected? == false }

%p
  %h2
    - if sad_nodes.any?
      Demand not expected: #{sad_nodes.length} nodes are unhappy. :-(
    - else
      So far so good!

- if sad_nodes.any?
  %table.table.table-condensed
    %thead
      %tr
        %th Id
        %th Key
        %th Demand
        %th Expected
        %th
    %tbody
      - sad_nodes.each do |node|
        - key = node.key
        %tr
          %td
            %a{:id => key}= node.dataset_get(:excel_id)
          %td= link_to key, inspect_node_path(:id => key)
          %td.align-right= auto_number node.demand
          %td.align-right= auto_number node.demand_expected_value
          %td
            &nbsp;
            - if node.demand_expected? == false
              \:-(
            &nbsp;

%h2 All nodes
%table.table.table-condensed
  %thead
    %tr
      %th Id
      %th Key
      %th Demand
      %th Expected
      %th
  %tbody
    - @nodes.each do |node|
      - key = node.key
      %tr
        %td
          %a{:id => key}= node.dataset_get(:excel_id)
        %td= link_to key, inspect_node_path(:id => key)
        %td.align-right= auto_number node.demand
        %td.align-right= auto_number node.demand_expected_value
        %td
          &nbsp;
          - if node.demand_expected? == false
            \:-(
          &nbsp;
