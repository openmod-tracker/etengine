- content_for(:title, @node_present.key)

= render "inspect/shared/inspect_subnav"

:ruby
  @pre = @node_present.query
  @fut = @node_future.query
  node_key = @node_present.key.to_s


.row-fluid
  .wide
    .page-header
      %h1
        = node_key
      .controls
        %span.graph-name
          = params[:graph_name].humanize
          Graph
        %span.graph-name
          = @node_present.sector_key
          = @node_present.use_key
        -# = link_to 'View document', link_to_node_file(@node_future), class: 'btn btn-small'
        -# = link_to 'Visualize present graph', {:format => 'svg'}, :target => :blank, :class => 'btn btn-small'
        -# = link_to 'Visualize future graph', {:format => 'svg', :graph => 'future'}, :target => :blank, :class => 'btn btn-small'

.row-fluid.wide.node-flows
  .node-flows-inner
    .energy
      .present
        %span.name Present
        %span.output{ title: "Output flow: #{node_flow(@node_present, :outputs)}" }
          = auto_number node_flow(@node_present, :outputs)
        = energy_flow_arrow
        %span.demand{ title: "Demand: #{@node_present.demand}" }<
          = auto_number @node_present.demand
        = energy_flow_arrow
        %span.input{ title: "Input flow #{node_flow(@node_present, :inputs) }" }
          = auto_number node_flow(@node_present, :inputs)
      .future
        %span.name Future
        %span.output{ title: "Output flow: #{node_flow(@node_future, :outputs)}" }
          = auto_number node_flow(@node_future, :outputs)
        = energy_flow_arrow
        %span.demand{ title: "Demand: #{@node_future.demand}" }<
          = auto_number @node_future.demand
        = energy_flow_arrow
        %span.input{ title: "Input flow #{node_flow(@node_future, :inputs) }" }
          = auto_number node_flow(@node_future, :inputs)
    - delta = (@node_future.demand / @node_present.demand) * 100 - 100
    - if delta.abs > 1e-5
      .delta
        - if delta > 0
          :plain
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M7 11l5-5m0 0l5 5m-5-5v12" />
            </svg>
        - else
          :plain
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M17 13l-5 5m0 0l-5-5m5 5V6" />
            </svg>
        == #{ auto_number(delta) }%

.tabbable.edge-flows.wide
  %ul.nav.nav-tabs
    %li
      %a{ 'href' => "#present-edges", 'data-toggle' => 'tab' } Present Flows
    %li.active
      %a{ 'href' => "#future-edges", 'data-toggle' => 'tab' } Future Flows

  .tab-content
    #present-edges.tab-pane
      = render 'node_edges', c: @node_present
    #future-edges.tab-pane.active
      = render 'node_edges', c: @node_future

.row-flex.wide
  .wide-two-thirds.tabbable.detail-tabs
    = render 'details_select', locals: { serializer: @serializer }
  .wide-third
    .white-box
      %h4 Details
      %table.table.table-condensed
        %tbody
          = render partial: 'object_attributes', locals: { name: 'Demand from energy graph', object: @node_future.from_energy }
          = render partial: 'object_attributes', locals: { name: 'Demand from molecule graph', object: @node_future.from_molecules }
          = render partial: 'object_attributes', locals: { name: 'Fever (Heat)', object: @node_future.fever }
          = render partial: 'object_attributes', locals: { name: 'Heat network (HT)', object: @node_future.heat_network_ht }
          = render partial: 'object_attributes', locals: { name: 'Heat network (MT)', object: @node_future.heat_network_mt }
          = render partial: 'object_attributes', locals: { name: 'Heat network (LT)', object: @node_future.heat_network_lt }
          = render partial: 'object_attributes', locals: { name: 'Hydrogen', object: @node_future.hydrogen }
          = render partial: 'object_attributes', locals: { name: 'Merit Order', object: @node_future.merit_order }
          = render partial: 'object_attributes', locals: { name: 'Network Gas', object: @node_future.network_gas }
          = render partial: 'object_attributes', locals: { name: 'Storage', object: @node_future.storage }
      %h5 Node groups
      %ol
        - @node_present.groups.each do |group|
          %li= group
